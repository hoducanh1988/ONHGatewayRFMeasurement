<UserControl x:Class="OneHomeRFMeasurement.Views.RunAllView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:OneHomeRFMeasurement.Views"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800" Background="White">

    <Grid>
        <TabControl Margin="0,0,5,0" BorderBrush="{StaticResource color_border}" BorderThickness="0,0,0,1" TabStripPlacement="Bottom">
            <TabControl.Resources>

                <Style TargetType="{x:Type TabPanel}">
                    <Setter Property="HorizontalAlignment" Value="Left" />
                </Style>

                <Style TargetType="{x:Type TabItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabItem}">
                                <Grid>
                                    <Border Name="Border" Margin="0,0,-4,0" BorderThickness="1,1,1,1" CornerRadius="0" >
                                        <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="12,2,12,2" RecognizesAccessKey="True"/>
                                    </Border>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Panel.ZIndex" Value="100"/>
                                        <!--<Setter TargetName="Border" Property="Background" Value="#f7f7f7" />-->
                                        <Setter TargetName="Border" Property="BorderThickness" Value="0,0,0,3" />
                                        <Setter TargetName="Border" Property="BorderBrush" Value="#777777"/>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="False">
                                        <Setter TargetName="Border" Property="Background" Value="#FFFFFF" />
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <!--<Setter TargetName="Border" Property="Background" Value="Orange" />-->
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <Style TargetType="Label" x:Key="label_log_header">
                    <Setter Property="FontSize" Value="{StaticResource fontSizeTabItem}"/>
                    <Setter Property="Width" Value="115"/>
                    <Setter Property="FontWeight" Value="Normal"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="FontWeight" Value="SemiBold"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>

                <Style TargetType="TextBox">
                    <Setter Property="FontSize" Value="{StaticResource fontSizeController}"/>
                    <Setter Property="FontWeight" Value="SemiBold"/>
                    <Setter Property="BorderBrush" Value="{StaticResource color_border}"/>
                    <Setter Property="BorderThickness" Value="0,0,0,1"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                    <Setter Property="Height" Value="30"/>
                    <Setter Property="Padding" Value="5,0,0,0"/>
                    <Setter Property="IsEnabled" Value="True"/>
                    <Style.Triggers>
                        <Trigger Property="IsFocused"  Value="True">
                            <Setter Property="Background" Value="{StaticResource color_focus}"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=RAM.totalResult}" Value="Waiting...">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>

            </TabControl.Resources>

            <TabItem>
                <TabItem.Header>
                    <Label Style="{StaticResource label_log_header}" Content="Log Item"/>
                </TabItem.Header>

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="120"/>
                    </Grid.RowDefinitions>

                    <WrapPanel>
                        <Label FontSize="{StaticResource fontSizeNormal}" Content="Nhập id sản phẩm: "/>
                        <TextBox local:FocusExtension.IsFocused="{Binding Path=RAM.isFocused}"  Width="350" Text="{Binding Path=RAM.ID, UpdateSourceTrigger=PropertyChanged}">
                            <TextBox.InputBindings>
                                <KeyBinding Command="{Binding StartCommand}" Key="Enter"/>
                            </TextBox.InputBindings>
                        </TextBox>
                    </WrapPanel>

                    <TabControl BorderThickness="0,0,0,0" TabStripPlacement="Top" Grid.Row="1">
                        <TabControl.Resources>
                            <Style TargetType="{x:Type TabPanel}">
                                <Setter Property="HorizontalAlignment" Value="Left" />
                            </Style>
                        </TabControl.Resources>
                        
                        <TabItem>
                            <TabItem.Header>
                                <Label Style="{StaticResource label_log_header}" Width="105" Content="Commands"/>
                            </TabItem.Header>

                            <DataGrid x:Name="dg_command" Grid.Row="1" AutoGenerateColumns="False" ItemsSource="{Binding collectionCommand}"
                              Background="White"
                              CanUserAddRows="False" CanUserDeleteRows="False"
                              CanUserResizeColumns="False" CanUserResizeRows="False" CanUserSortColumns="False" CanUserReorderColumns="False" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto"
                              GridLinesVisibility="None"
                              HeadersVisibility="Column"
                              BorderBrush="{StaticResource color_border}"
                              BorderThickness="0,0,0,0.5"
                              SelectionUnit="FullRow" SelectionMode="Extended">

                                <DataGrid.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Refresh"/>
                                    </ContextMenu>
                                </DataGrid.ContextMenu>

                                <DataGrid.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="BorderThickness" Value="0,0,1,1"/>
                                        <Setter Property="BorderBrush" Value="#FFB3B3B3"/>
                                        <Setter Property="FontSize" Value="13"/>
                                        <Setter Property="FontWeight" Value="Normal"/>
                                        <Setter Property="Height" Value="22"/>
                                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                                    </Style>
                                </DataGrid.CellStyle>

                                <DataGrid.ColumnHeaderStyle>
                                    <Style TargetType="DataGridColumnHeader">
                                        <Setter Property="FontSize" Value="13"/>
                                        <Setter Property="Height" Value="40"/>
                                        <Setter Property="FontWeight" Value="Bold"/>
                                        <Setter Property="BorderBrush" Value="{StaticResource color_border}"/>
                                        <Setter Property="BorderThickness" Value="0,0,0,0.5"/>
                                        <Setter Property="Padding" Value="3,0,0,0"/>
                                    </Style>
                                </DataGrid.ColumnHeaderStyle>

                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="ID" Binding="{Binding ID}" Width="Auto"/>
                                    <DataGridTextColumn Header="Mode" Binding="{Binding Mode}" Width="Auto"/>
                                    <DataGridTextColumn Header="Device" Binding="{Binding Device}" Width="Auto"/>
                                    <DataGridTextColumn Header="Command" Binding="{Binding commandText}" Width="Auto"/>
                                    <DataGridTextColumn Visibility="Collapsed" Header="IsChecked" Binding="{Binding isChecked}" Width="Auto"/>
                                    <DataGridTextColumn Visibility="Collapsed" Header="InputType" Binding="{Binding inputType}" Width="Auto"/>
                                    <DataGridTextColumn Visibility="Collapsed" Header="Retry" Binding="{Binding retryTime}" Width="Auto"/>
                                    <DataGridTextColumn Visibility="Collapsed" Header="FeedBack" Binding="{Binding feedBack}" Width="Auto"/>
                                    <DataGridTextColumn Visibility="Collapsed" Header="Split" Binding="{Binding splitChar}" Width="Auto"/>
                                    <DataGridTextColumn Visibility="Collapsed" Header="Indexer" Binding="{Binding valueIndexer}" Width="Auto"/>
                                    <DataGridTextColumn Header="LL" Binding="{Binding LL}" Width="Auto"/>
                                    <DataGridTextColumn Header="Value" Binding="{Binding Value}" Width="100"/>
                                    <DataGridTextColumn Header="UL" Binding="{Binding UL}" Width="Auto"/>
                                    <DataGridTextColumn Header="Attenuation" Binding="{Binding Attenuation}" Width="Auto"/>
                                    <DataGridTextColumn Header="Result" Binding="{Binding Result}" Width="Auto">
                                        <DataGridTextColumn.CellStyle>
                                            <Style TargetType="DataGridCell">
                                                <Setter Property="BorderThickness" Value="0,0,1,1"/>
                                                <Setter Property="BorderBrush" Value="#FFB3B3B3"/>
                                                <Setter Property="FontSize" Value="13"/>
                                                <Setter Property="FontWeight" Value="SemiBold"/>
                                                <Setter Property="Height" Value="22"/>
                                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                <Setter Property="Foreground" Value="{StaticResource color_ready}"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Path=Result}" Value="Waiting...">
                                                        <Setter Property="Foreground" Value="{StaticResource color_wait}"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Path=Result}" Value="Passed">
                                                        <Setter Property="Foreground" Value="{StaticResource color_pass}"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Path=Result}" Value="Failed">
                                                        <Setter Property="Foreground" Value="{StaticResource color_fail}"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </DataGridTextColumn.CellStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Visibility="Collapsed" IsReadOnly="True" Header="Note" Binding="{Binding Note}" Width="100"/>
                                </DataGrid.Columns>

                                <DataGrid.RowStyle>
                                    <Style TargetType="DataGridRow">
                                        <Setter Property="Foreground" Value="Black"/>
                                        <Setter Property="Background" Value="White"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Result}" Value="Failed">
                                                <Setter Property="Foreground" Value="Red"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding isChecked}" Value="False">
                                                <Setter Property="Background" Value="{StaticResource color_disable}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGrid.RowStyle>
                            </DataGrid>
                        </TabItem>

                        <TabItem>
                            <TabItem.Header>
                                <Label Style="{StaticResource label_log_header}" Width="105" Content="Modes"/>
                            </TabItem.Header>

                            <DataGrid AutoGenerateColumns="False" ItemsSource="{Binding collectionResult}"
                              Background="White"
                              CanUserAddRows="False" CanUserDeleteRows="False"
                              CanUserResizeColumns="False" CanUserResizeRows="False" CanUserSortColumns="False" CanUserReorderColumns="False" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto"
                              GridLinesVisibility="None"
                              HeadersVisibility="Column"
                              BorderBrush="{StaticResource color_border}"
                              BorderThickness="0,0,0,0.5"
                              SelectionUnit="FullRow" SelectionMode="Extended">

                                <DataGrid.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Refresh"/>
                                    </ContextMenu>
                                </DataGrid.ContextMenu>

                                <DataGrid.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="BorderThickness" Value="0,0,1,1"/>
                                        <Setter Property="BorderBrush" Value="#FFB3B3B3"/>
                                        <Setter Property="FontSize" Value="15"/>
                                        <Setter Property="FontWeight" Value="Normal"/>
                                        <Setter Property="Height" Value="25"/>
                                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                                    </Style>
                                </DataGrid.CellStyle>

                                <DataGrid.ColumnHeaderStyle>
                                    <Style TargetType="DataGridColumnHeader">
                                        <Setter Property="FontSize" Value="13"/>
                                        <Setter Property="Height" Value="40"/>
                                        <Setter Property="FontWeight" Value="Bold"/>
                                        <Setter Property="BorderBrush" Value="{StaticResource color_border}"/>
                                        <Setter Property="BorderThickness" Value="0,0,0,0.5"/>
                                        <Setter Property="Padding" Value="3,0,0,0"/>
                                    </Style>
                                </DataGrid.ColumnHeaderStyle>

                                <DataGrid.Columns>
                                    <DataGridTextColumn IsReadOnly="True" Header="Index" Binding="{Binding Index}" Width="0.5*"/>
                                    <DataGridTextColumn IsReadOnly="True" Header="Name" Binding="{Binding Name}" Width="3*"/>
                                    <DataGridTextColumn IsReadOnly="True" Header="Result" Binding="{Binding Result}" Width="*" FontWeight="SemiBold">
                                        <DataGridTextColumn.CellStyle>
                                            <Style TargetType="DataGridCell">
                                                <Setter Property="BorderThickness" Value="0,0,1,1"/>
                                                <Setter Property="BorderBrush" Value="#FFB3B3B3"/>
                                                <Setter Property="FontSize" Value="15"/>
                                                <Setter Property="FontWeight" Value="Normal"/>
                                                <Setter Property="Height" Value="25"/>
                                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                <Setter Property="Foreground" Value="{StaticResource color_ready}"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Path=Result}" Value="Waiting...">
                                                        <Setter Property="Foreground" Value="{StaticResource color_wait}"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Path=Result}" Value="Passed">
                                                        <Setter Property="Foreground" Value="{StaticResource color_pass}"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Path=Result}" Value="Failed">
                                                        <Setter Property="Foreground" Value="{StaticResource color_fail}"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </DataGridTextColumn.CellStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn IsReadOnly="True" Header="Test time(ms)" Binding="{Binding testTime}" Width="*"/>
                                </DataGrid.Columns>

                                <DataGrid.RowStyle>
                                    <Style TargetType="DataGridRow">
                                        <Setter Property="Foreground" Value="Black"/>
                                        <Setter Property="Background" Value="White"/>
                                    </Style>
                                </DataGrid.RowStyle>
                            </DataGrid>

                        </TabItem>
                        
                    </TabControl>
                    

                    <StackPanel Grid.Row="2">
                        <WrapPanel>
                            <Label FontSize="{StaticResource fontSizeNormal}" Content="Total time:"/>
                            <Label FontSize="{StaticResource fontSizeNormal}" Content="{Binding Path=RAM.totalTime}"/>
                        </WrapPanel>
                        <WrapPanel Margin="0,-10,0,0">
                            <Label FontSize="{StaticResource fontSizeNormal}" Content="Product ID:"/>
                            <Label FontSize="{StaticResource fontSizeNormal}" FontWeight="SemiBold" Content="{Binding Path=RAM.productID}"/>
                        </WrapPanel>
                        <StackPanel>
                            <Label Margin="0,-5,0,0" FontSize="{StaticResource fontSizeNormal}" Content="Total result:"/>
                            <Label Content="{Binding Path=RAM.totalResult}">
                                <Label.Style>
                                    <Style TargetType="Label">
                                        <Setter Property="Margin" Value="0,-15,0,0"/>
                                        <Setter Property="FontSize" Value="35"/>
                                        <Setter Property="FontWeight" Value="SemiBold"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=RAM.totalResult}" Value="Waiting...">
                                                <Setter Property="Foreground" Value="Orange"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=RAM.totalResult}" Value="Passed">
                                                <Setter Property="Foreground" Value="Lime"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=RAM.totalResult}" Value="Failed">
                                                <Setter Property="Foreground" Value="Red"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Label.Style>
                            </Label>
                        </StackPanel>
                        
                        
                    </StackPanel>
                </Grid>


            </TabItem>


            <TabItem>
                <TabItem.Header>
                    <Label Style="{StaticResource label_log_header}" Content="Log System"/>
                </TabItem.Header>

                <Grid>
                    <ScrollViewer Grid.Row="1" x:Name="Scr_LogSystem">
                        <RichTextBox IsReadOnly="True" TextBlock.LineHeight="1" FontSize="13" FontWeight="Normal" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                            <FlowDocument>
                                <Paragraph>
                                    <Run Text="{Binding Path=RAM.logSystem,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                                </Paragraph>
                            </FlowDocument>
                        </RichTextBox>
                    </ScrollViewer>
                </Grid>

            </TabItem>


            <TabItem>
                <TabItem.Header>
                    <Label Style="{StaticResource label_log_header}" Content="Log Instrument"/>
                </TabItem.Header>

                <Grid>
                    <ScrollViewer Grid.Row="1" x:Name="Scr_LogInstrument">
                        <RichTextBox IsReadOnly="True" TextBlock.LineHeight="1" FontSize="13" FontWeight="Normal" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                            <FlowDocument>
                                <Paragraph>
                                    <Run Text="{Binding Path=RAM.logInstrument,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                                </Paragraph>
                            </FlowDocument>
                        </RichTextBox>
                    </ScrollViewer>
                </Grid>
            </TabItem>

            <TabItem>
                <TabItem.Header>
                    <Label Style="{StaticResource label_log_header}" Content="Log Dut"/>
                </TabItem.Header>

                <Grid>
                    <ScrollViewer Grid.Row="1" x:Name="Scr_LogDut">
                        <RichTextBox IsReadOnly="True" TextBlock.LineHeight="1" FontSize="13" FontWeight="Normal" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                            <FlowDocument>
                                <Paragraph>
                                    <Run Text="{Binding Path=RAM.logDut,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                                </Paragraph>
                            </FlowDocument>
                        </RichTextBox>
                    </ScrollViewer>
                </Grid>
            </TabItem>

        </TabControl>

    </Grid>

    
</UserControl>
